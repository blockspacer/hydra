#############################################################################
# Makefile for building: ../bin/eqOgre
# Generated by qmake (2.01a) (Qt 4.7.0) on: Mon Feb 22 02:25:55 2010
# Project:  eqOgre.pro
# Template: app
# Command: /usr/local/Trolltech/Qt-4.7.0/bin/qmake -unix -o Makefile eqOgre.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = 
CFLAGS        = -m64 -pipe -g -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/local/Trolltech/Qt-4.7.0/mkspecs/linux-g++-64 -I. -I/usr/local/include/OGRE -I/usr/local/include/raknet
LINK          = g++
LFLAGS        = -m64 -Wl,-rpath,/usr/local/Trolltech/Qt-4.7.0/lib
LIBS          = $(SUBLIBS)   -L/usr/local/lib/ -lOgreMain -leq -leqserver -lGLEW -lRakNet -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/local/Trolltech/Qt-4.7.0/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ../build/eqOgre/obj/

####### Files

SOURCES       = channel.cpp \
		client.cpp \
		config.cpp \
		node.cpp \
		pipe.cpp \
		window.cpp \
		graph/scene_node.cpp \
		graph/scene_manager.cpp \
		graph/root.cpp \
		ogre/ogre_scene_manager.cpp \
		ogre/ogre_scene_node.cpp \
		ogre/ogre_entity.cpp \
		object_params.cpp \
		main.cpp \
		server_command.cpp \
		udp_server.cpp 
OBJECTS       = ../build/eqOgre/obj/channel.o \
		../build/eqOgre/obj/client.o \
		../build/eqOgre/obj/config.o \
		../build/eqOgre/obj/node.o \
		../build/eqOgre/obj/pipe.o \
		../build/eqOgre/obj/window.o \
		../build/eqOgre/obj/scene_node.o \
		../build/eqOgre/obj/scene_manager.o \
		../build/eqOgre/obj/root.o \
		../build/eqOgre/obj/ogre_scene_manager.o \
		../build/eqOgre/obj/ogre_scene_node.o \
		../build/eqOgre/obj/ogre_entity.o \
		../build/eqOgre/obj/object_params.o \
		../build/eqOgre/obj/main.o \
		../build/eqOgre/obj/server_command.o \
		../build/eqOgre/obj/udp_server.o
DIST          = /usr/local/Trolltech/Qt-4.7.0/mkspecs/common/g++.conf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/common/unix.conf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/common/linux.conf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/qconfig.pri \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/qt_functions.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/qt_config.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/exclusive_builds.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/default_pre.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/debug.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/default_post.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/unix/thread.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/warn_on.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/resources.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/uic.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/yacc.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/lex.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/include_source_dir.prf \
		eqOgre.pro
QMAKE_TARGET  = eqOgre
DESTDIR       = ../bin/
TARGET        = ../bin/eqOgre

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) ../bin/ || $(MKDIR) ../bin/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: eqOgre.pro  /usr/local/Trolltech/Qt-4.7.0/mkspecs/linux-g++-64/qmake.conf /usr/local/Trolltech/Qt-4.7.0/mkspecs/common/g++.conf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/common/unix.conf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/common/linux.conf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/qconfig.pri \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/qt_functions.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/qt_config.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/exclusive_builds.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/default_pre.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/debug.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/default_post.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/unix/thread.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/warn_on.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/resources.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/uic.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/yacc.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/lex.prf \
		/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/include_source_dir.prf
	$(QMAKE) -unix -o Makefile eqOgre.pro
/usr/local/Trolltech/Qt-4.7.0/mkspecs/common/g++.conf:
/usr/local/Trolltech/Qt-4.7.0/mkspecs/common/unix.conf:
/usr/local/Trolltech/Qt-4.7.0/mkspecs/common/linux.conf:
/usr/local/Trolltech/Qt-4.7.0/mkspecs/qconfig.pri:
/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/qt_functions.prf:
/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/qt_config.prf:
/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/exclusive_builds.prf:
/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/default_pre.prf:
/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/debug.prf:
/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/default_post.prf:
/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/unix/thread.prf:
/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/warn_on.prf:
/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/resources.prf:
/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/uic.prf:
/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/yacc.prf:
/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/lex.prf:
/usr/local/Trolltech/Qt-4.7.0/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile eqOgre.pro

dist: 
	@$(CHK_DIR_EXISTS) ../build/eqOgre/obj/eqOgre1.0.0 || $(MKDIR) ../build/eqOgre/obj/eqOgre1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) ../build/eqOgre/obj/eqOgre1.0.0/ && (cd `dirname ../build/eqOgre/obj/eqOgre1.0.0` && $(TAR) eqOgre1.0.0.tar eqOgre1.0.0 && $(COMPRESS) eqOgre1.0.0.tar) && $(MOVE) `dirname ../build/eqOgre/obj/eqOgre1.0.0`/eqOgre1.0.0.tar.gz . && $(DEL_FILE) -r ../build/eqOgre/obj/eqOgre1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

../build/eqOgre/obj/channel.o: channel.cpp channel.hpp \
		config.hpp \
		message.hpp \
		command.hpp \
		typedefs.hpp \
		graph/root.hpp \
		graph/scene_manager.hpp \
		graph/scene_node.hpp \
		graph/movable_object.hpp \
		utility.hpp \
		distrib_container.hpp \
		graph/entity.hpp \
		graph/render_window.hpp \
		server_command.hpp \
		fifo_buffer.hpp \
		exceptions.hpp \
		pipe.hpp \
		window.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../build/eqOgre/obj/channel.o channel.cpp

../build/eqOgre/obj/client.o: client.cpp client.hpp \
		fifo_buffer.hpp \
		exceptions.hpp \
		server_command.hpp \
		command.hpp \
		typedefs.hpp \
		graph/root.hpp \
		graph/scene_manager.hpp \
		graph/scene_node.hpp \
		graph/movable_object.hpp \
		utility.hpp \
		distrib_container.hpp \
		graph/entity.hpp \
		graph/render_window.hpp \
		udp_server.hpp \
		config.hpp \
		message.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../build/eqOgre/obj/client.o client.cpp

../build/eqOgre/obj/config.o: config.cpp config.hpp \
		message.hpp \
		command.hpp \
		typedefs.hpp \
		graph/root.hpp \
		graph/scene_manager.hpp \
		graph/scene_node.hpp \
		graph/movable_object.hpp \
		utility.hpp \
		distrib_container.hpp \
		graph/entity.hpp \
		graph/render_window.hpp \
		server_command.hpp \
		fifo_buffer.hpp \
		exceptions.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../build/eqOgre/obj/config.o config.cpp

../build/eqOgre/obj/node.o: node.cpp config.hpp \
		message.hpp \
		command.hpp \
		typedefs.hpp \
		graph/root.hpp \
		graph/scene_manager.hpp \
		graph/scene_node.hpp \
		graph/movable_object.hpp \
		utility.hpp \
		distrib_container.hpp \
		graph/entity.hpp \
		graph/render_window.hpp \
		server_command.hpp \
		fifo_buffer.hpp \
		exceptions.hpp \
		ogre/ogre_root.hpp \
		ogre/ogre_scene_manager.hpp \
		math/conversion.hpp \
		ogre/ogre_render_window.hpp \
		channel.hpp \
		node.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../build/eqOgre/obj/node.o node.cpp

../build/eqOgre/obj/pipe.o: pipe.cpp config.hpp \
		message.hpp \
		command.hpp \
		typedefs.hpp \
		graph/root.hpp \
		graph/scene_manager.hpp \
		graph/scene_node.hpp \
		graph/movable_object.hpp \
		utility.hpp \
		distrib_container.hpp \
		graph/entity.hpp \
		graph/render_window.hpp \
		server_command.hpp \
		fifo_buffer.hpp \
		exceptions.hpp \
		pipe.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../build/eqOgre/obj/pipe.o pipe.cpp

../build/eqOgre/obj/window.o: window.cpp window.hpp \
		pipe.hpp \
		fifo_buffer.hpp \
		exceptions.hpp \
		command.hpp \
		typedefs.hpp \
		message.hpp \
		graph/root.hpp \
		graph/scene_manager.hpp \
		graph/scene_node.hpp \
		graph/movable_object.hpp \
		utility.hpp \
		distrib_container.hpp \
		graph/entity.hpp \
		graph/render_window.hpp \
		config.hpp \
		server_command.hpp \
		channel.hpp \
		math/conversion.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../build/eqOgre/obj/window.o window.cpp

../build/eqOgre/obj/scene_node.o: graph/scene_node.cpp graph/scene_node.hpp \
		graph/movable_object.hpp \
		typedefs.hpp \
		utility.hpp \
		distrib_container.hpp \
		graph/scene_manager.hpp \
		graph/entity.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../build/eqOgre/obj/scene_node.o graph/scene_node.cpp

../build/eqOgre/obj/scene_manager.o: graph/scene_manager.cpp graph/scene_manager.hpp \
		graph/scene_node.hpp \
		graph/movable_object.hpp \
		typedefs.hpp \
		utility.hpp \
		distrib_container.hpp \
		graph/entity.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../build/eqOgre/obj/scene_manager.o graph/scene_manager.cpp

../build/eqOgre/obj/root.o: graph/root.cpp graph/root.hpp \
		graph/scene_manager.hpp \
		graph/scene_node.hpp \
		graph/movable_object.hpp \
		typedefs.hpp \
		utility.hpp \
		distrib_container.hpp \
		graph/entity.hpp \
		graph/render_window.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../build/eqOgre/obj/root.o graph/root.cpp

../build/eqOgre/obj/ogre_scene_manager.o: ogre/ogre_scene_manager.cpp ogre/ogre_scene_manager.hpp \
		graph/scene_manager.hpp \
		graph/scene_node.hpp \
		graph/movable_object.hpp \
		typedefs.hpp \
		utility.hpp \
		distrib_container.hpp \
		graph/entity.hpp \
		math/conversion.hpp \
		ogre/ogre_scene_node.hpp \
		ogre/ogre_movable_object.hpp \
		ogre/ogre_entity.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../build/eqOgre/obj/ogre_scene_manager.o ogre/ogre_scene_manager.cpp

../build/eqOgre/obj/ogre_scene_node.o: ogre/ogre_scene_node.cpp ogre/ogre_scene_node.hpp \
		graph/scene_node.hpp \
		graph/movable_object.hpp \
		typedefs.hpp \
		utility.hpp \
		distrib_container.hpp \
		math/conversion.hpp \
		ogre/ogre_movable_object.hpp \
		ogre/ogre_scene_manager.hpp \
		graph/scene_manager.hpp \
		graph/entity.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../build/eqOgre/obj/ogre_scene_node.o ogre/ogre_scene_node.cpp

../build/eqOgre/obj/ogre_entity.o: ogre/ogre_entity.cpp ogre/ogre_entity.hpp \
		ogre/ogre_movable_object.hpp \
		graph/entity.hpp \
		graph/movable_object.hpp \
		typedefs.hpp \
		utility.hpp \
		ogre/ogre_scene_manager.hpp \
		graph/scene_manager.hpp \
		graph/scene_node.hpp \
		distrib_container.hpp \
		math/conversion.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../build/eqOgre/obj/ogre_entity.o ogre/ogre_entity.cpp

../build/eqOgre/obj/object_params.o: object_params.cpp object_params.hpp \
		utility.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../build/eqOgre/obj/object_params.o object_params.cpp

../build/eqOgre/obj/main.o: main.cpp client.hpp \
		fifo_buffer.hpp \
		exceptions.hpp \
		server_command.hpp \
		command.hpp \
		typedefs.hpp \
		graph/root.hpp \
		graph/scene_manager.hpp \
		graph/scene_node.hpp \
		graph/movable_object.hpp \
		utility.hpp \
		distrib_container.hpp \
		graph/entity.hpp \
		graph/render_window.hpp \
		udp_server.hpp \
		nodeFactory.hpp \
		config.hpp \
		message.hpp \
		node.hpp \
		pipe.hpp \
		channel.hpp \
		window.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../build/eqOgre/obj/main.o main.cpp

../build/eqOgre/obj/server_command.o: server_command.cpp exceptions.hpp \
		server_command.hpp \
		command.hpp \
		typedefs.hpp \
		graph/root.hpp \
		graph/scene_manager.hpp \
		graph/scene_node.hpp \
		graph/movable_object.hpp \
		utility.hpp \
		distrib_container.hpp \
		graph/entity.hpp \
		graph/render_window.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../build/eqOgre/obj/server_command.o server_command.cpp

../build/eqOgre/obj/udp_server.o: udp_server.cpp udp_server.hpp \
		fifo_buffer.hpp \
		exceptions.hpp \
		server_command.hpp \
		command.hpp \
		typedefs.hpp \
		graph/root.hpp \
		graph/scene_manager.hpp \
		graph/scene_node.hpp \
		graph/movable_object.hpp \
		utility.hpp \
		distrib_container.hpp \
		graph/entity.hpp \
		graph/render_window.hpp \
		cmd_network.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../build/eqOgre/obj/udp_server.o udp_server.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

