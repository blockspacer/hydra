#-------------------------------------------------------------------
# Joonatan Kuosa <joonatan.kuosa@savantsimulators.com>
# 2010-11
#
# This file is part of the CMake build system for Hydra
#
# The contents of this file are placed in the public domain. Feel
# free to make use of it in any way you like.
#
#-------------------------------------------------------------------

project( "demos" CXX )

cmake_minimum_required(VERSION 2.6)

# Copy configs
copy_start_scripts( hydra
	ogre_project/ogre.prj
	"ogre" )

copy_start_scripts( hydra
	collada_test_project/collada_test.prj
	"collada" )

copy_start_scripts( hydra
	"eye_tracking_test_project/eye_tracking_test.prj"
	"eye_tracking" )

copy_start_scripts( hydra
	light_test_project/light_test.prj
	"light_test" )

copy_start_scripts( hydra
	generated_physics_project/generated_physics.prj
	"generated_physics" )

copy_start_scripts( hydra
	robot_project/robot.prj
	"robot" )

copy_start_scripts( hydra
	perapora_project/perapora.prj
	"perapora" )

copy_start_scripts( hydra
	perapora_project/perapora_physics.prj
	"perapora_physics" )

copy_start_scripts( hydra
	hsf_test_project/perapora.prj
	"hsf_test" )

copy_start_scripts( hydra
	excavator_physics_project/excavator_physics.prj
	"excavator_physics" )

copy_start_scripts( hydra
	cad_import_test/cad_import.prj
	"cad_import_test" )

copy_start_scripts( hydra
	btCompound_test/btCompound_test.prj
	"btCompound_test" )

copy_start_scripts( hydra
	dynamic_concave_raycast/dynamic_concave_raycast.prj
	"dynamic_concave_raycast" )
	
add_executable( fake_tracking_server
	fake_tracking_server.cpp
	${HydraMain_SOURCE_DIR}/base/sleep.hpp
	${HydraMain_SOURCE_DIR}/base/time.hpp
	${HydraMain_SOURCE_DIR}/base/time.cpp
	${HydraMain_SOURCE_DIR}/base/chrono.hpp
	${HydraMain_SOURCE_DIR}/base/chrono.cpp
	${HydraMain_SOURCE_DIR}/math/conversion.hpp
	${HydraMain_SOURCE_DIR}/math/math.hpp
	${HydraMain_SOURCE_DIR}/math/math.cpp
	${HydraMain_SOURCE_DIR}/base/filesystem.cpp
	${HydraMain_SOURCE_DIR}/base/filesystem.hpp
	${HydraMain_SOURCE_DIR}/base/string_utils.cpp
	${HydraMain_SOURCE_DIR}/base/string_utils.hpp
	${HydraMain_SOURCE_DIR}/base/system_util.hpp
	${HydraMain_SOURCE_DIR}/base/system_util.cpp
	${HydraMain_SOURCE_DIR}/logger.hpp
	${HydraMain_SOURCE_DIR}/defines.hpp
	)

target_link_libraries(fake_tracking_server
	${Ogre_LIBRARY}
	${VRPN_LIBRARY}
	${Boost_FILESYSTEM_LIBRARIES}
	${Boost_PROGRAM_OPTIONS_LIBRARIES}
	)

add_executable(vrpn_tracker_recorder
	vrpn_tracker_recorder.cpp
	${HydraMain_SOURCE_DIR}/base/sleep.hpp
	${HydraMain_SOURCE_DIR}/base/time.hpp
	${HydraMain_SOURCE_DIR}/base/time.cpp
	${HydraMain_SOURCE_DIR}/base/chrono.cpp
	${HydraMain_SOURCE_DIR}/base/chrono.hpp
	)

target_link_libraries(vrpn_tracker_recorder
	${VRPN_LIBRARY}
	${Boost_PROGRAM_OPTIONS_LIBRARIES}
	)

add_executable(vrpn_analog_server
	vrpn_analog_server.cpp
	${HydraMain_SOURCE_DIR}/base/sleep.hpp
	${HydraMain_SOURCE_DIR}/base/time.hpp
	${HydraMain_SOURCE_DIR}/base/time.cpp
	)

target_link_libraries(vrpn_analog_server ${VRPN_LIBRARY} ${Boost_PROGRAM_OPTIONS_LIBRARIES} )


include_directories(${demos_BINARY_DIR})


# TODO these should be autogenerated from the library paths
# And they are different for both release and debug builds and also for 32-bit
# and 64-bit
# Debug is easy to decide we don't need to do anything in here
# we can do that at compiler by appending 'release' and 'debug' to paths
set(HYDRA_GL_BINARY_DIR \"${HydraGL_BINARY_DIR}\")
set(HYDRA_MAIN_BINARY_DIR \"${HydraMain_BINARY_DIR}\")

if(NOT EXISTS ${HYDRA_DEPENDENCIES_LIB_DIR})
	message(FATAL_ERROR "Hydra dependencies lib dir doesn't exist.")
endif()

set(OGRE_BINARY_DIR "\"${HYDRA_DEPENDENCIES_LIB_DIR}/Ogre/bin\"")
set(CEGUI_BINARY_DIR "\"${HYDRA_DEPENDENCIES_LIB_DIR}/CEGUI/bin\"")
set(OIS_BINARY_DIR "\"${HYDRA_DEPENDENCIES_LIB_DIR}/OIS/bin\"")
set(BOOST_BINARY_DIR "\"${HYDRA_DEPENDENCIES_LIB_DIR}/bin\"")
set(GENERAL_BINARY_DIR "\"${HYDRA_DEPENDENCIES_LIB_DIR}/bin\"")
Set(EXPAT_BINARY_DIR "\"${HYDRA_DEPENDENCIES_LIB_DIR}/expat/bin\"")
set(SKYX_BINARY_DIR "\"${HYDRA_DEPENDENCIES_LIB_DIR}/SkyX/bin\"")

configure_file(${demos_SOURCE_DIR}/build_defines_template.hpp
	${demos_BINARY_DIR}/build_defines.hpp )

set(HYDRA_SRC
	hydra.cpp
	build_defines.hpp
	system_tools/message_box.hpp
	${HydraMain_SOURCE_DIR}/base/string_utils.cpp
	${HydraMain_SOURCE_DIR}/base/string_utils.hpp
	${HydraMain_SOURCE_DIR}/base/filesystem.cpp
	${HydraMain_SOURCE_DIR}/base/filesystem.hpp
	)
if(WIN32)
	add_executable( hydra ${HYDRA_SRC} res/resource.rc )
else()
	add_executable( hydra ${HYDRA_SRC} )
endif()

add_executable(angles_to_quaternion
	angles_to_quaternion.cpp
	${HydraMain_SOURCE_DIR}/math/math.cpp
	${HydraMain_SOURCE_DIR}/math/math.hpp)

target_link_libraries(angles_to_quaternion ${Ogre_LIBRARY})

# These should not need to link to anything else than boost
set( SRC
	${HydraMain_SOURCE_DIR}/base/time.hpp
	${HydraMain_SOURCE_DIR}/base/time.cpp
	${HydraMain_SOURCE_DIR}/base/chrono.hpp
	${HydraMain_SOURCE_DIR}/base/chrono.cpp
	${HydraMain_SOURCE_DIR}/base/report.hpp
	)
add_executable(timestamp_client timestamp_client.cpp ${SRC})
target_link_libraries( timestamp_client ${Boost_SYSTEM_LIBRARIES} ${Boost_PROGRAM_OPTIONS_LIBRARIES} )

add_executable(timestamp_server timestamp_server.cpp ${SRC})
target_link_libraries( timestamp_server ${Boost_SYSTEM_LIBRARIES} ${Boost_PROGRAM_OPTIONS_LIBRARIES} )

# add copying ini file from data to binary dir
# Using custom command instead of configure_file because we need to copy
# ini file to every binary dir only if the ini file template has been changed
#
# We want to run this even when hydra.exe has not changed HydraMain.dll has.
# This is problematic since either we add it to hydra compile or we add it to
# CMake processing, since hydra compile will occure more often assuming
# frequent rebuilds we'll add it there.
add_custom_command(TARGET hydra POST_BUILD
	COMMAND ${CMAKE_COMMAND} -E copy_if_different
		${vl_SOURCE_DIR}/data/hydra.ini
		${demos_BINARY_DIR}/$<CONFIGURATION>/hydra.ini )

# Install
install( TARGETS hydra DESTINATION bin CONFIGURATIONS Release )
install( FILES ${vl_SOURCE_DIR}/data/hydra.ini DESTINATION bin CONFIGURATIONS Release )

