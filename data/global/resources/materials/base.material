// Joonatan Kuosa <joonatan.kuosa@savantsimulators.com>
// Savant Simulators
// 2011-04
//
// Some base materials used in most of the Scenes
// Includes sky and ground using different shaders

import * from "normal_map.material"

material sky/cloudy/ffp
{
	technique
	{
		pass
		{
			lighting off
			depth_write off
			polygon_mode_overrideable false
			texture_unit
			{
				texture clouds.jpg
				// The animation doesn't seem to work
				scroll_anim 0.15 0
			}
		}
	}
}

/// Seems like the glsl version is working as well as the ffp
material sky/cloudy/glsl
{
	technique
	{
		pass
		{
			lighting off
			depth_write off
			polygon_mode_overrideable false
			vertex_program_ref pass_through_vs
			{
			}

			fragment_program_ref flat_texture_ps
			{
			}

			texture_unit sky
			{
				texture clouds.jpg
				// The animation doesn't seem to work
				scroll_anim 0.15 0
			}
		}
	}
}

material CloudySky : sky/cloudy/glsl
{}

material sky/cloudy : sky/cloudy/glsl
{}

material rtt
{
	technique
	{
		pass
		{
			lighting off
			vertex_program_ref pass_through_vs
			{
			}

			fragment_program_ref flat_texture_ps
			{
			}

			texture_unit rtt_texture
			{
				texture white.tga
			}
		}
	}
}

/// Basic Fixed function pipeline material used for testing
/// uses the same interface as our custom shader materials but
/// gives all the goodies that FFP has.
/// Used mostly testing when we make assumptions based on Ogre's material
/// system and are not certain whether those assumptions are scene, object,
/// material or shading dependant i.e. if they work only with FFP shading or not.
material ffp/basic
{
	technique
	{
		pass
		{
			texture_unit diffuse_map
			{
				tex_address_mode wrap
				texture white.tga
			}
		}
	}
}

material ground/basic
{
	technique
	{
		pass
		{
			texture_unit
			{
				texture rock.png
			}
		}
	}
}

material ground/flat : bling_phong
{
	set $specularCol "0 0 0"
	set_texture_alias diffuse_map rock.png
}

material ground/flat/shadows : bling_phong/shadows
{
	set $specularCol "0 0 0"
	set_texture_alias diffuse_map rock.png
}

material ground/bump_mapped/shadows : bling_phong/normal_map/shadows
{
//	set $ambientCol "1 0 0 1"
	set $specularCol "0 0 0"
	set_texture_alias diffuse_map rock.png
//	set_texture_alias specularMap rock.png
	set_texture_alias normal_map rock_NM.jpg
}

material athene_material : bling_phong/shadows
{
//	set $ambientCol "1 0 0 1"
	set $specularCol "0 0 0"
}

// Basic class material without any texture effects
material glass/blue : bling_phong/shadows
{
	set $ambientCol "0 0 0.5 0.2"
	set $diffuseCol "0 0 0.5 0.2"
//	set $specularCol "0 0 0"
	set $shininess 250
	set $depthWrite off
	set $ambient_scene_blend "alpha_blend"
	set $diffuse_scene_blend "alpha_blend"
}

material tube_material : bling_phong/shadows
{
	set $ambientCol "0.3 0.3 0.3 1.0"
	set $diffuseCol "0.25 0.25 0.25 1.0"
	set $specularCol "0 0 0"
	set $shininess 20
}


material debug_red 
{
	technique
	{
		pass
		{
			vertex_program_ref pass_through_vs
			{
			}

			fragment_program_ref ambient_ps
			{
			}

			diffuse 0 0 0 0
			specular 0 0 0 0
			emissive 1.0 0 0
		}
	}
}

material collision_sphere/transparent/red : bling_phong/shadows
{
	set $emissiveCol "0.4 0 0 0.2"
	set $diffuseCol "0.4 0.2 0.2 0.2"
	set $specularCol "0 0 0"
	set $depthWrite off
	set $ambient_scene_blend "alpha_blend"
	set $diffuse_scene_blend "alpha_blend"
}

material finger_sphere/red : bling_phong/shadows
{
	set $emissiveCol "0.4 0 0 1"
	set $diffuseCol "0.6 0.4 0.4 1"
	set $specularCol "0 0 0"
}

material finger_sphere/blue : bling_phong/shadows
{
	set $emissiveCol "0.0 0 0.4 1"
	set $diffuseCol "0.3 0.3 0.6 1"
	set $specularCol "0 0 0"
}

material finger_sphere/green : bling_phong/shadows
{
	set $emissiveCol "0.0 0.4 0 1"
	set $diffuseCol "0.3 0.6 0.3 1"
	set $specularCol "0 0 0"
}

